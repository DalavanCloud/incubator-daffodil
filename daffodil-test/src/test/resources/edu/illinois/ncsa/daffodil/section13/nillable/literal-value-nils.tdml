<?xml version="1.0" encoding="UTF-8"?>
<tdml:testSuite suiteName="nested-separator-delimited"
  description="Tests separation and nested sequences." xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ct="http://w3.ibm.com/xmlns/dfdl/ctInfoset"
  xmlns:ex="http://example.com" xmlns="http://example.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <tdml:defineSchema name="text_03">
    <dfdl:format ref="ex:daffodilTest1" initiator=""
      terminator="" separator="" separatorPolicy="suppressed"
      separatorPosition="infix" documentFinalTerminatorCanBeMissing="yes"
      encoding="ASCII" representation="text" occursCountKind="parsed"
      nilValueDelimiterPolicy="none" nilValue="nil %ES;" nilKind="literalValue"
      textNumberRep="standard" ignoreCase="no" />

    <xs:element name="doc" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:terminator=";">
          <xs:element name="e1" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e2" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e3" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="text_03" root="doc"
    model="text_03"
    description="Text_03 Two nilValues one a regular value the other a CharEntity - DFDL-13-235R">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0,nil,;]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <doc xmlns="http://www.example.org/example1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0">
          <e1>0</e1>
          <e2 xsi:nil="true" />
          <e3 xsi:nil="true" />
        </doc>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="text_04">
    <dfdl:format ref="ex:daffodilTest1" initiator=""
      terminator="" separator="" separatorPolicy="suppressed"
      separatorPosition="infix" documentFinalTerminatorCanBeMissing="yes"
      encoding="ASCII" representation="text" occursCountKind="parsed"
      nilValueDelimiterPolicy="none" nilValue="nil %WSP;" nilKind="literalValue"
      textNumberRep="standard" ignoreCase="no" />

    <xs:element name="doc" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:terminator=";">
          <xs:element name="e1" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e2" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e3" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="text_04" root="doc"
    model="text_04"
    description="Text_04 Two nilValues one a regular value the other a WSP CharEntity - DFDL-13-235R">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0,nil, ;]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <doc xmlns="http://www.example.org/example1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0">
          <e1>0</e1>
          <e2 xsi:nil="true" />
          <e3 xsi:nil="true" />
        </doc>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="text_05">
    <dfdl:format ref="ex:daffodilTest1" initiator=""
      terminator="" separator="" separatorPolicy="suppressed"
      separatorPosition="infix" documentFinalTerminatorCanBeMissing="yes"
      encoding="ASCII" representation="text" occursCountKind="parsed"
      nilValueDelimiterPolicy="none" nilValue="nil %WSP*;" nilKind="literalValue"
      textNumberRep="standard" ignoreCase="no" />

    <xs:element name="doc" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:terminator=";">
          <xs:element name="e1" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e2" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e3" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="text_05" root="doc"
    model="text_05"
    description="Text_05 Two nilValues one a regular value the other a CharEntity - DFDL-13-235R">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0,nil, ;]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <doc xmlns="http://www.example.org/example1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0">
          <e1>0</e1>
          <e2 xsi:nil="true" />
          <e3 xsi:nil="true" />
        </doc>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="text_06">
    <dfdl:format ref="ex:daffodilTest1" initiator=""
      terminator="" separator="" separatorPolicy="suppressed"
      separatorPosition="infix" documentFinalTerminatorCanBeMissing="yes"
      encoding="ASCII" representation="text" occursCountKind="parsed"
      nilValueDelimiterPolicy="none" nilValue="nil %WSP+;" nilKind="literalValue"
      textNumberRep="standard" ignoreCase="no" />

    <xs:element name="doc" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:terminator=";">
          <xs:element name="e1" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e2" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
          <xs:element name="e3" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="text_06" root="doc"
    model="text_06"
    description="Text_06 Two nilValues one a regular value the other a WSP+ CharEntity - DFDL-13-235R">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0,nil, 	 ;]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <doc xmlns="http://www.example.org/example1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0">
          <e1>0</e1>
          <e2 xsi:nil="true" />
          <e3 xsi:nil="true" />
        </doc>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="binary_01">

    <!-- Note how in this format the nilValue looks like text, but will be 
      used
      to match binary data. The encoding is iso-8859-1, which allowed every 
      byte to
      be a valid character. This is an advanced DFDL techique for dealing 
      with binary
      data as if it were text so as to be able to use features like literalValue 
      nilKind
      with binary data -->
    <dfdl:format ref="ex:daffodilTest1" initiator=""
      terminator="" separator="" separatorPolicy="suppressed"
      separatorPosition="infix" documentFinalTerminatorCanBeMissing="yes"
      encoding="iso-8859-1" representation="binary" occursCountKind="parsed"
      nilValueDelimiterPolicy="none" nilValue="%NUL;%NUL;%NUL;%NUL;"
      nilKind="literalValue" textNumberRep="standard" ignoreCase="no"
      byteOrder="bigEndian" binaryNumberRep="binary" lengthUnits="bytes" />

    <xs:element name="doc" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:terminator=";">
          <xs:element name="e1" nillable="true" type="xsd:int"
            dfdl:lengthKind="implicit" />
          <xs:element name="e2" nillable="true" type="xsd:int"
            dfdl:lengthKind="implicit" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="binary_01" root="doc"
    model="binary_01" description="Binary_01 Basic nilValue - DFDL-13-235R">
    <!-- "0,nil;" -->
    <tdml:document>
      <tdml:documentPart type="byte">000000002CFFFFFFFF3B</tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <doc xmlns="http://www.example.org/example1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0">
          <e1 xsi:nil="true" />
          <e2>-1</e2>
        </doc>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  
    <tdml:defineSchema name="PaddedNils">
    <dfdl:format ref="ex:daffodilTest1" initiator=""
      terminator="" separator="" separatorPolicy="suppressed"
      separatorPosition="infix" documentFinalTerminatorCanBeMissing="yes"
      encoding="ASCII" representation="text" occursCountKind="parsed"
      nilValueDelimiterPolicy="none" nilValue="nil %WSP+;" nilKind="literalValue"
      textNumberRep="standard" ignoreCase="no" textTrimKind="padChar" textNumberPadCharacter="P"/>

    <xs:element name="doc" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator="," dfdl:terminator=";">
          <xs:element name="e1" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" dfdl:textNumberJustification="left" />
          <xs:element name="e2" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" dfdl:textNumberJustification="right"/>
          <xs:element name="e3" nillable="true" type="xsd:int"
            dfdl:lengthKind="delimited" dfdl:textNumberJustification="center"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>
  
    <tdml:parserTestCase name="test_padded_nils" root="doc"
    model="PaddedNils"
    description="Verify that padding and nils work correctly">

    <tdml:document>
      <tdml:documentPart type="text"><![CDATA[0PPP,PPPnil,PPP   PPP;]]></tdml:documentPart>
    </tdml:document>

    <tdml:infoset>
      <tdml:dfdlInfoset>
        <doc xmlns="http://www.example.org/example1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0">
          <e1>0</e1>
          <e2 xsi:nil="true" />
          <e3 xsi:nil="true" />
        </doc>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

</tdml:testSuite>
