<?xml version="1.0" encoding="UTF-8"?>
<testSuite suiteName="escapeScheme" xmlns="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:tns="http://example.com" xmlns:ct="http://w3.ibm.com/xmlns/dfdl/ctInfoset"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <defineSchema name="es1">
    <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />

    <dfdl:defineEscapeScheme name="pound">
      <dfdl:escapeScheme escapeCharacter='#'
        escapeKind="escapeCharacter" escapeEscapeCharacter="" />
    </dfdl:defineEscapeScheme>
    <dfdl:defineEscapeScheme name='cStyleComment'>
      <dfdl:escapeScheme escapeBlockStart='/*'
        escapeBlockEnd='*/' escapeKind="escapeBlock"
        escapeEscapeCharacter="" />
    </dfdl:defineEscapeScheme>

    <xs:element name="list1">
      <xs:complexType>
        <xs:sequence dfdl:initiatedContent="no"
          dfdl:separatorPosition="infix" dfdl:sequenceKind="ordered"
          dfdl:separator=",">
          <xs:element name="character" type="xs:string">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:element escapeSchemeRef="tns:pound"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element name="block" type="xs:string"
            dfdl:escapeSchemeRef="tns:cStyleComment" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </defineSchema>
  
  <defineSchema name="es2">
    <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />
      <xs:element name="elem" dfdl:defineEscapeScheme=""/>
  </defineSchema>

  <defineSchema name="es4">
    <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />
      <xs:element name="elem"/>
  </defineSchema>

  <defineSchema name="es5">
    <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />
    <dfdl:defineEscapeScheme>
      <dfdl:escapeScheme escapeCharacter='#'
        escapeKind="escapeCharacter" escapeEscapeCharacter="" />
    </dfdl:defineEscapeScheme>
    <xs:element name="elem" type="xs:int"/>
  </defineSchema>
  
  <defineSchema name="es6">
    <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />

    <dfdl:defineEscapeScheme name="pound">
      <dfdl:escapeScheme escapeCharacter='#'
        escapeKind="escapeCharacter" escapeEscapeCharacter="" />
    </dfdl:defineEscapeScheme>
    <dfdl:defineEscapeScheme name='cStyleComment'>
      <dfdl:escapeScheme escapeBlockStart='/*'
        escapeBlockEnd='*/' escapeKind="escapeBlock"
        escapeEscapeCharacter="" />
    </dfdl:defineEscapeScheme>

    <xs:element name="list2">
      <xs:complexType>
        <xs:sequence dfdl:initiatedContent="no"
          dfdl:separatorPosition="infix" dfdl:sequenceKind="ordered"
          dfdl:separator=",">
          <xs:element name="character" type="xs:string" dfdl:escapeSchemeRef="tns:pound"/>
          <xs:element name="block" type="xs:string">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/">
                <dfdl:element>
                  <dfdl:property name="escapeSchemeRef">tns:cStyleComment</dfdl:property>
                </dfdl:element>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
  </defineSchema>
  
  <defineSchema name="emptyRef">
  <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />
    
    <dfdl:defineEscapeScheme name="table1">
      <dfdl:escapeScheme escapeCharacter='/'
        escapeKind="escapeCharacter" escapeEscapeCharacter=";"
        extraEscapedCharacters="?" />
    </dfdl:defineEscapeScheme>

    <xs:element name="noesc" type="xs:string" dfdl:escapeSchemeRef=""/>
    <xs:element name="esc" type="xs:string" dfdl:escapeSchemeRef="tns:table1"/>

  </defineSchema>
  
  <defineSchema name="unusedRef">
  <dfdl:format ref="tns:daffodilTest1" lengthKind="delimited" />
    
    <dfdl:defineEscapeScheme name="table1">
      <dfdl:escapeScheme escapeCharacter='/'
        escapeKind="escapeCharacter" escapeEscapeCharacter=";"
        extraEscapedCharacters="?" />
    </dfdl:defineEscapeScheme>

    <xs:element name="noesc" type="xs:string"/>

  </defineSchema>

  <parserTestCase name="escapeSchemeSimple" model="es1"
    description="Section 7 defineEscapeScheme - DFDL-7-079R" root="list1">
    <document><![CDATA[ab#,cd,/*ef,gh*/]]></document>
    <infoset>
      <dfdlInfoset>
        <list1>
          <character>ab,cd</character>
          <block>ef,gh</block>
        </list1>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

  <!--
       Test Name: escapeSchemeFail
          Schema: es2
            Root: elem
         Purpose: This is a negative test to demonstrate that defineEscapeScheme cannot be used within an element tag
  -->

  <parserTestCase name="escapeSchemeFail" model="es2"
    description="Section 7 defineEscapeScheme - DFDL-7-087R" root="elem">
    <document><![CDATA[123]]></document>
    <errors>
      <error>Schema Definition Error</error>
    </errors>
  </parserTestCase>
  
  <!--
       Test Name: escapeSchemeFail2
          Schema: es5
            Root: elem
         Purpose: This is a negative test to demonstrate that "name" is a required attribute of the defineEscapeScheme tag 
  -->

  <parserTestCase name="escapeSchemeFail2" model="es5"
    description="Section 7 defineEscapeScheme - DFDL-7-082R" root="elem">
    <document><![CDATA[123]]></document>
    <errors>
      <error>Schema Definition Error</error>
      <error>Attribute 'name' must appear on element</error>
    </errors>
  </parserTestCase>
  
  <!--
       Test Name: escapeSchemeFail3
          Schema: es6
            Root: list2
         Purpose: This is a negative test to demonstrate that escapeScheme cannot be specified in element form 
  -->

  <parserTestCase name="escapeSchemeFail3" model="es6"
    description="Section 7 defineEscapeScheme - DFDL-7-017R" root="list2">
    <document><![CDATA[123]]></document>
    <errors>
      <error>Schema Definition Error</error>
    </errors>
  </parserTestCase>
  
  <!--
       Test Name: escapeSchemeEmpty
          Schema: emptyRef
            Root: noesc
         Purpose: This is a test to demonstrate that if the value of escapeSchemeRef is the empty string then escaping is explicitly turned off
  -->

  <parserTestCase name="escapeSchemeEmpty" model="emptyRef"
    description="Section 13 defineEscapeScheme - DFDL-13-022R" root="noesc">
    <document><![CDATA[;/../a]]></document>
    <infoset>
      <dfdlInfoset>
        <noesc>;/../a</noesc>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>
  
  <!--
       Test Name: escapeSchemeUnused
          Schema: unusedRef
            Root: noesc
         Purpose: This is a test to demonstrate that A dfdl:defineFormat serves only to supply a 
                  named definition for a format for reuse from other places. It does not cause any 
                  use of the representation properties it contains to describe any actual data (DFDL-7-088R)
  -->

  <parserTestCase name="escapeSchemeUnused" model="unusedRef"
    description="Section 7 defineEscapeScheme - DFDL-7-088R" root="noesc">
    <document><![CDATA[;/../a]]></document>
    <infoset>
      <dfdlInfoset>
        <noesc>;/../a</noesc>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>
  
  <!--
       Test Name: escapeSchemeNonEmpty
          Schema: emptyRef
            Root: esc
         Purpose: This is a test to counter the test that demonstrates if the value of escapeSchemeRef is the empty string then escaping is explicitly turned off
  -->

  <parserTestCase name="escapeSchemeNonEmpty" model="emptyRef"
    description="Section 13 defineEscapeScheme - DFDL-13-022R" root="esc">
    <document><![CDATA[;/../a]]></document>
    <infoset>
      <dfdlInfoset>
        <esc>/..a</esc>
      </dfdlInfoset>
    </infoset>
  </parserTestCase>

</testSuite>
