<?xml version="1.0" encoding="UTF-8"?>
<tdml:testSuite suiteName="Assert" description="Section 7 - Assert"
  xmlns:ex="http://example.com" xmlns="http://example.com"
  xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <tdml:defineSchema name="s1">
    <dfdl:format ref="ex:daffodilTest1" />

    <xs:simpleType name="simpleAssert">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert><![CDATA[{ xs:int(.) eq 42 }]]></dfdl:assert>
        </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:int">
        <xs:pattern value="{\d}*" />
      </xs:restriction>
    </xs:simpleType>

    <xs:element name="e0" dfdl:lengthKind="explicit"
      dfdl:length="2" type="simpleAssert" />

    <xs:element name="e1" type="xs:int" dfdl:inputValueCalc="{ 42 }">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert><![CDATA[{ xs:int(.) eq 42 }]]></dfdl:assert>
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e2" type="xs:int" dfdl:inputValueCalc="{ 43 }">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert><![CDATA[{ xs:int(.) eq 42 }]]></dfdl:assert>
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e3"><!-- like e2, but assert uses a path to a 
        peer
        element -->
      <xs:complexType>
        <xs:sequence>
          <xs:element name="v" type="xs:int"
            dfdl:inputValueCalc="{ 42 }" />
          <xs:element name="a" type="xs:string"
            dfdl:inputValueCalc="{ 'ok' }">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
                <dfdl:assert><![CDATA[{ xs:int(../ex:v) ne 42 }]]></dfdl:assert>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="e4" type="xs:int" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert testKind="pattern" testPattern="\d\d"
            message="Assertion failed for pattern '\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e5" type="xs:int" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert testKind="pattern" testPattern="\d\d\d"
            message="Assertion failed for pattern '\d\d\d'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>
    <xs:element name="e6" type="xs:int" dfdl:lengthKind="pattern"
      dfdl:lengthPattern="\d\d" dfdl:terminator=": ,">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert testKind="pattern" testPattern="\d\d"
            message="Assertion failed for pattern '\d\d'" />
          <dfdl:assert testKind="pattern" testPattern="\d\d:"
            message="Assertion failed for pattern '\d\d:'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e7" type="xs:string" dfdl:lengthKind="delimited">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert testKind="pattern" testPattern="\p{L}{2,5}"
            message="Assertion failed for pattern '\p{L}{2,5}'" />
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

    <xs:element name="e8">
      <xs:complexType>
        <xs:sequence>
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
              <dfdl:assert testKind="pattern" testPattern="\p{L}{3},\d{3}"
                message="Assertion failed for pattern '\p{L}{3},\d{3}'" />
            </xs:appinfo>
          </xs:annotation>
          <xs:element name="e1" type="xs:string"
            dfdl:lengthKind="delimited" dfdl:terminator="," />
          <xs:element name="e2" type="xs:int"
            dfdl:lengthKind="delimited" />
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="description" type="xs:string" />
    <xs:element name="quantity" type="xs:int" />

    <xs:group name="namedGroup">
      <xs:sequence>
        <xs:element name="e1" type="xs:string"
          dfdl:lengthKind="delimited" dfdl:terminator="," />
        <xs:element name="e2" type="xs:int" dfdl:lengthKind="delimited" />
      </xs:sequence>
    </xs:group>

    <xs:element name="Item" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:group ref="ex:namedGroup">
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
              <dfdl:assert testKind="pattern" testPattern="\p{L}{3},\d{3}"
                message="Assertion failed for pattern '\p{L}{3},\d{3}'" />
            </xs:appinfo>
          </xs:annotation>
        </xs:group>
      </xs:complexType>
    </xs:element>

    <xs:element name="Item_01" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence dfdl:separator=","
          dfdl:separatorPosition="infix">
          <xs:element ref="ex:description" dfdl:lengthKind="delimited">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
                <dfdl:assert testKind="pattern" testPattern="\p{L}{3}"
                  message="Assertion failed for pattern '\p{L}{3}'" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="ex:quantity" dfdl:lengthKind="delimited">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
                <dfdl:assert testKind="pattern" testPattern="\d{3}"
                  message="Assertion failed for pattern '\d{3}'" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <!--
    Test name: assertPass
    Schema: s1
    Purpose: This document contains the value that is asserted by the schema 
    and should pass.
  -->

  <tdml:parserTestCase name="assertPass" root="e1"
    model="s1" description="Section 7 - assert as a value - DFDL-7-045R">
    <tdml:document />
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>42</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: assertFail1
    Schema: s1
    Purpose: This document does not contain the value asserted in the schema 
    and should fail.
  -->

  <tdml:parserTestCase name="assertFail1" root="e2"
    model="s1"
    description="Section 7 - negative test for assert expression - DFDL-7-043R">
    <tdml:document />
    <tdml:errors>
      <tdml:error>Assertion</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: assertFail2
    Schema: s1
    Purpose: This document does not contain the value asserted in the schema 
    and should fail (uses a reference to another element).
  -->

  <tdml:parserTestCase name="assertFail2" root="e3"
    model="s1"
    description="Section 7 - negative test for assert expression - DFDL-7-043R">
    <tdml:document />
    <tdml:errors>
      <tdml:error>Assertion</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:defineSchema name="choice1">
    <dfdl:format ref="ex:daffodilTest1" />
    <xs:element name="c1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="v" type="xs:int"
            dfdl:inputValueCalc="{ 42 }" />
          <xs:element name="c">
            <xs:complexType>
              <xs:choice>
                <xs:element name="a1" type="xs:string"
                  dfdl:inputValueCalc="{ 'a1' }">
                  <xs:annotation>
                    <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
                      <dfdl:assert><![CDATA[{ xs:int(../../ex:v) ne 42 }]]></dfdl:assert>
                    </xs:appinfo>
                  </xs:annotation>
                </xs:element>
                <xs:element name="a2" type="xs:string"
                  dfdl:inputValueCalc="{ 'a2' }" />
              </xs:choice>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </tdml:defineSchema>

  <!--
    Test name: assertGuidesChoice
    Schema: choice1
    Purpose: This document demonstrates the use of an assertion in a choice.
    The output should match the infoset and it should pass.
  -->

  <tdml:parserTestCase name="assertGuidesChoice"
    root="c1" model="choice1"
    description="Section 7 - assert on an element declaration - DFDL-7-048R">
    <tdml:document />
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <c1>
          <v>42</v>
          <c>
            <a2>a2</a2>
          </c>
        </c1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: assertPatternPass
    Schema: s1
    Purpose: This document demonstrates the use of a pattern assertion regarding 
    a value in a document and should pass.
  -->

  <tdml:parserTestCase name="assertPatternPass"
    root="e4" model="s1" description="Section 7 - assert as a value - DFDL-7-045R">
    <tdml:document><![CDATA[43]]></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e4>43</e4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: assertPatternFail
    Schema: s1
    Purpose: This document does not adhere to the assertion pattern and should 
    fail.
  -->

  <tdml:parserTestCase name="assertPatternFail"
    root="e5" model="s1" description="Section 7 - assert as a value - DFDL-7-045R">
    <tdml:document>43</tdml:document>
    <tdml:errors>
      <tdml:error>Assert</tdml:error>
      <tdml:error>pattern</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: assertPatternPass2
    Schema: s1
    Purpose: This document demonstrates the use of multiple pattern assertions 
    regarding a value in a document and should pass.
  -->

  <tdml:parserTestCase name="assertPatternPass2"
    root="e6" model="s1"
    description="Section 7 - assert pattern pass multiple assert - DFDL-7-053R">
    <tdml:document>43:</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e6>43</e6>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: assertPatternFail2
    Schema: s1
    Purpose: This document demonstrates the use of multiple pattern assertions 
    regarding a value in a document and should fail.
  -->

  <tdml:parserTestCase name="assertPatternFail2"
    root="e6" model="s1"
    description="Section 7 - assert pattern fail multiple assert - DFDL-7-053R">
    <tdml:document>43,</tdml:document>
    <tdml:errors>
      <tdml:error>Assert</tdml:error>
      <tdml:error>pattern</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: assertPatternPass3
    Schema: s1
    Purpose: This document demonstrates the use of POSIX regex patterns in 
    assertions and should pass.
  -->

  <tdml:parserTestCase name="assertPatternPass3"
    root="e7" model="s1" description="Section 7 - assert pattern pass - DFDL-7-045R">
    <tdml:document>abcDEFG</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e7>abcDEFG</e7>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="assertOnSequence" root="e8"
    model="s1" description="assert on a sequence - DFDL-7-051R">
    <tdml:document>ab,12</tdml:document>
    <tdml:errors>
      <tdml:error>Assert</tdml:error>
      <tdml:error>pattern</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="assertOnGroupRef" root="Item"
    model="s1" description="assert on a group reference - DFDL-7-050R">

    <tdml:document><![CDATA[Shirts,30]]></tdml:document>
    <tdml:errors>
      <tdml:error>Assert</tdml:error>
      <tdml:error>pattern</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="assertOnElemRef" root="Item_01"
    model="s1" description="assert on an element reference - DFDL-7-049R">

    <tdml:document><![CDATA[Shirts,30]]></tdml:document>
    <tdml:errors>
      <tdml:error>Assert</tdml:error>
      <tdml:error>pattern</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:defineSchema name="literalTextMatch">
    <dfdl:format ref="ex:daffodilTest1" lengthKind="delimited" />
    <xs:element name="root">
      <xs:complexType>
        <xs:sequence dfdl:separator="/"
          dfdl:separatorPosition="prefix" dfdl:separatorPolicy="suppressed">
          <xs:element name="e1" type="xs:string">
            <xs:annotation>
              <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
                <dfdl:assert testKind="pattern">XYZZY</dfdl:assert>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    <xs:element name="combined1" type="xs:string">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert testKind="pattern">\dNUM\d</dfdl:assert>
        </xs:appinfo>
      </xs:annotation>
    </xs:element>
    <xs:element name="combined2" type="xs:string">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/dfdl-1.0/">
          <dfdl:assert testKind="pattern">three digit number: \d\d\d</dfdl:assert>
        </xs:appinfo>
      </xs:annotation>
    </xs:element>

  </tdml:defineSchema>

  <!--
    Test Name: assertPatternLiteralTextMatch
    Schema: literalTextMatch
    Purpose: This document contains the literal text asserted in the schema 
    and should pass.
  -->

  <tdml:parserTestCase name="assertPatternLiteralTextMatch"
    root="root" model="literalTextMatch" description="pattern asserts - DFDL-7-045R">
    <tdml:document>/XYZZY</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <root>
          <e1>XYZZY</e1>
        </root>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test Name: assertPatternCombinedTextMatch
    Schema: literalTextMatch
    Purpose: This document contains the literal text asserted in the schema 
    and adheres to the pattern and should pass.
  -->

  <tdml:parserTestCase name="assertPatternCombinedTextMatch"
    root="combined1" model="literalTextMatch" description="pattern asserts - DFDL-7-045R">
    <tdml:document>4NUM6</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <combined1>4NUM6</combined1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test Name: assertPatternCombinedTextMatch2
    Schema: literalTextMatch
    Purpose: This document contains the literal text asserted in the schema 
    and adheres to the pattern and should pass.
  -->

  <tdml:parserTestCase name="assertPatternCombinedTextMatch2"
    root="combined2" model="literalTextMatch" description="pattern asserts - DFDL-7-045R">
    <tdml:document>three digit number: 563</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <combined2>three digit number: 563</combined2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test Name: assertPatternCombinedTextMatch3
    Schema: literalTextMatch
    Purpose: This document does not contain the literal text asserted in 
    the schema or adhere to the pattern and should fail.
  -->
  <tdml:parserTestCase name="assertPatternCombinedTextMatch3"
    root="combined2" model="literalTextMatch" description="pattern asserts - DFDL-7-045R">
    <tdml:document>two digit number: 56</tdml:document>
    <tdml:errors>
      <tdml:error>Assertion</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="assertOnSimpleType"
    root="e0" model="s1" description="pattern asserts - DFDL-7-045R">
    <tdml:document>42</tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:e0>42</ex:e0>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

</tdml:testSuite>
