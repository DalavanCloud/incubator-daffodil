<?xml version="1.0" encoding="UTF-8"?>
<tdml:testSuite xmlns:ex="http://example.com"
	xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:ct="http://w3.ibm.com/xmlns/dfdl/ctInfoset">

	<tdml:defineSchema name="inputValueCalc-Embedded.dfdl.xsd">


		<dfdl:format ref="ex:daffodilTest1" lengthKind="delimited" lengthUnits="bytes"
			encoding="UTF-8" separator="" initiator="" terminator=""
			occursCountKind="parsed" ignoreCase="no" textNumberRep="standard"
			representation="text" />

		<xs:element name="ivc_01" type="example1" />

		<xs:complexType name="example1">
			<xs:sequence>
				<xs:element name="num1" type="xs:int" />
				<xs:element name="num1_square" type="xs:int"
					dfdl:inputValueCalc="{../ex:num1 * ../ex:num1 }" />
				<xs:element name="num2" type="xs:int"
					dfdl:inputValueCalc="{81}" />
			</xs:sequence>
		</xs:complexType>

		<xs:element name="ivc_02" type="example2" />

		<xs:complexType name="example2">
			<xs:sequence>
				<xs:element name="num1_square" type="xs:int"
					dfdl:inputValueCalc="{../ex:num1 * ../ex:num1 }" />
				<xs:element name="num1" type="xs:int" />
				<xs:element name="num2" type="xs:int"
					dfdl:inputValueCalc="{81}" />
			</xs:sequence>
		</xs:complexType>

		<xs:element name="ivc_03" dfdl:lengthKind="implicit">
			<xs:complexType>
				<xs:sequence dfdl:separator="," dfdl:separatorPosition="infix"
					dfdl:terminator=";">
					<xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e2" nillable="true" dfdl:nilKind="literalValue"
						dfdl:nilValue="%ES;" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e2_square" type="xs:int"
						dfdl:inputValueCalc="{../ex:e2 * ../ex:e2 }" />
					<xs:element name="e3" type="xs:int" dfdl:lengthKind="delimited" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<xs:element name="ivc_04" dfdl:lengthKind="implicit">
			<xs:complexType>
				<xs:sequence dfdl:separator="," dfdl:separatorPosition="infix"
					dfdl:terminator=";">
					<xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e2" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e3" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="divide" type="xs:int"
						dfdl:inputValueCalc="{ xs:int(../ex:e2) div xs:int(../ex:e3) }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<xs:element name="ivc_05" dfdl:lengthKind="implicit">
			<xs:complexType>
				<xs:sequence dfdl:separator="," dfdl:separatorPosition="infix"
					dfdl:terminator=";">
					<xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e2" nillable="true" dfdl:nilKind="literalValue"
						dfdl:nilValue="%ES;" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e2_square" type="xs:int"
						dfdl:inputValueCalc="{../ex:e2 * ../ex:e2 }" />
					<xs:element name="e3" type="xs:int" dfdl:lengthKind="delimited" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<xs:element name="ivc_06" dfdl:lengthKind="implicit">
			<xs:complexType>
				<xs:sequence dfdl:separator="," dfdl:separatorPosition="infix"
					dfdl:terminator=";">
					<!-- putting an inputValueCalc element first in the sequence to insure 
						that it correctly determines there should not be any separator before element 
						e1 which is the first physical element. -->
					<xs:element name="ivc_is_first" type="xs:int"
						dfdl:inputValueCalc="{ 42 }" />
					<xs:element name="e1" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e2" nillable="true" dfdl:nilKind="literalValue"
						dfdl:nilValue="%ES;" type="xs:int" dfdl:lengthKind="delimited" />
					<xs:element name="e3" type="xs:int" dfdl:lengthKind="delimited" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>
		
		<xs:element name="ivc_08" type="example3" />

		<xs:complexType name="example3">
			<xs:sequence>
				<xs:element name="num1" type="xs:int" />
				<xs:element name="num1_square" type="xs:int" 
					dfdl:inputValueCalc="{parent::ex:ivc_08/ex:num1 * parent::ex:ivc_08/ex:num1 }" />
				<xs:element name="num2" type="xs:int"
					dfdl:inputValueCalc="{81}" />
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="ivc_09" type="example4" />

		<xs:complexType name="example4">
			<xs:sequence>
				<xs:element name="num1" type="xs:int" />
				<xs:element name="num1_square" type="xs:int" 
					dfdl:inputValueCalc="{parent::ez:ivc_09/ex:num1 * parent::ez:ivc_09/ex:num1 }" />
				<xs:element name="num2" type="xs:int"
					dfdl:inputValueCalc="{81}" />
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="ivc_10" type="example5" />

		<xs:complexType name="example5">
			<xs:sequence>
				<xs:element name="num1" type="xs:int" />
				<xs:element name="num1_square" type="xs:int" 
					dfdl:inputValueCalc="{parent::ex:ivc_10/ex:num1 * parent::ex:ivc_10/ex:num1 }" />
				<xs:element name="num2" type="xs:int"
					dfdl:inputValueCalc="{ $ex:var }" />
			</xs:sequence>
		</xs:complexType>
		
		<xs:element name="ivc_11">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="num" type="xs:int" />
					<xs:element name="str" type="xs:string"
						dfdl:inputValueCalc="{ ..\abcde }" />
				</xs:sequence>
			</xs:complexType>
		</xs:element>

	</tdml:defineSchema>

	<tdml:parserTestCase name="InputValueCalc_01" root="ivc_01"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Section 17 inputValueCalc - DFDL-17-007R">

		<tdml:document>7</tdml:document>
		<tdml:infoset>
			<tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<ivc_01>
					<num1>7</num1>
					<num1_square>49</num1_square>
					<num2>81</num2>
				</ivc_01>
			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>

	<tdml:parserTestCase name="InputValueCalc_02" root="ivc_02"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Section 17 inputValueCalc, forward reference- DFDL-17-007R">

		<tdml:document>7</tdml:document>
		<tdml:errors>
			<tdml:error></tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

	<tdml:parserTestCase name="InputValueCalc_03" root="ivc_03"
		model="inputValueCalc-Embedded.dfdl.xsd"
		description="Section 17 inputValueCalc, referencing a missing nillable element - DFDL-17-007R">

		<tdml:document>
			<tdml:documentPart type="text"><![CDATA[0,,5;]]></tdml:documentPart>
		</tdml:document>

		<tdml:errors>
			<tdml:error></tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

	<tdml:parserTestCase name="InputValueCalc_04" root="ivc_04"
		model="inputValueCalc-Embedded.dfdl.xsd" description="division by zero - DFDL-17-007R">

		<tdml:document>
			<tdml:documentPart type="text"><![CDATA[5,11,0;]]></tdml:documentPart>
		</tdml:document>

		<tdml:errors>
			<tdml:error>divide</tdml:error>
			<tdml:error>by zero</tdml:error>
		</tdml:errors>
	</tdml:parserTestCase>

	<tdml:parserTestCase name="InputValueCalc_05" root="ivc_05"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Section 17 inputValueCalc - DFDL-17-007R">

		<tdml:document>
			<tdml:documentPart type="text"><![CDATA[0,11,5;]]></tdml:documentPart>
		</tdml:document>

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ivc_05>
					<e1>0</e1>
					<e2>11</e2>
					<e2_square>121</e2_square>
					<e3>5</e3>
				</ivc_05>
			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>

	<tdml:parserTestCase name="InputValueCalc_06" root="ivc_06"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Section 17 inputValueCalc - DFDL-17-007R">

		<tdml:document>
			<tdml:documentPart type="text"><![CDATA[0,11,5;]]></tdml:documentPart>
		</tdml:document>

		<tdml:infoset>
			<tdml:dfdlInfoset>
				<ivc_06>
					<ivc_is_first>42</ivc_is_first>
					<e1>0</e1>
					<e2>11</e2>
					<e3>5</e3>
				</ivc_06>
			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>
	
	<tdml:parserTestCase name="InputValueCalc_08" root="ivc_08"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Same as InputValueCalc_01 except use of parent:: - DFDL-17-007R">

		<tdml:document>7</tdml:document>
		<tdml:infoset>
			<tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<ivc_08>
					<num1>7</num1>
					<num1_square>49</num1_square>
					<num2>81</num2>
				</ivc_08>
			</tdml:dfdlInfoset>
		</tdml:infoset>
	</tdml:parserTestCase>
	
	<tdml:parserTestCase name="InputValueCalc_09" root="ivc_09"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Same as InputValueCalc_08 except invalid prefix before ivc_09 - DFDL-17-007R">

		<tdml:document>7</tdml:document>
		<tdml:errors>
			<tdml:error/>
		</tdml:errors>
	</tdml:parserTestCase>
	
	<tdml:parserTestCase name="InputValueCalc_10" root="ivc_10"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Same as InputValueCalc_08 except using an undefined variable - DFDL-17-007R">

		<tdml:document>7</tdml:document>
		<tdml:errors>
			<tdml:error/>
		</tdml:errors>
	</tdml:parserTestCase>
	
	<tdml:parserTestCase name="InputValueCalc_11" root="ivc_11"
		model="inputValueCalc-Embedded.dfdl.xsd" description="Syntax error - DFDL-17-007R">

		<tdml:document>7</tdml:document>
		<tdml:errors>
			<tdml:error/>
		</tdml:errors>
	</tdml:parserTestCase>
</tdml:testSuite>