<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:sub="http://www.ogf.org/dfdl/dfdl-1.0/XMLSchemaSubset" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.ibm.com/xmlns/dfdl/testData"
	xmlns:tns="http://www.ibm.com/xmlns/dfdl/testData" elementFormDefault="unqualified">

	<xsd:import namespace="http://www.ogf.org/dfdl/dfdl-1.0/XMLSchemaSubset"
		schemaLocation="DFDLSubsetOfXMLSchema_v1_036.xsd" />
	<xsd:import namespace="http://www.w3.org/2001/XMLSchema"
		schemaLocation="XMLSchema.xsd" />

	<!-- Copyright (C) 2012, Tresys Technologies LLC. All Rights Reserved. -->

	<!-- IBM uses this namespace http://www.ibm.com/xmlns/dfdl/testData -->

	<element name="testSuite">
		<complexType>
			<sequence>
				<choice maxOccurs="unbounded" minOccurs="0">
					<element ref="tns:parserTestCase" />
					<!-- This is an extension to the IBM TDML language. We allow schemas 
						to be directly embedded inside the TDML file. A TDML file that contains all 
						the schemas it needs is a "self contained" TDML file.
					<element ref="tns:defineSchema" />
					-->
				</choice>
			</sequence>
			<attribute name="suiteName" type="xs:token" use="required" />
			<attribute name="description" type="xs:string" use="optional" />
		</complexType>
		<unique name="unique-parserTestCase-name">
			<selector xpath="parserTestCase" />
			<field xpath="@name" />
		</unique>
	</element>

	<!-- We want to allow an xsd:schema to be named and directly embedded in the TDML 
		thereby allowing a fully-self-contained single file test case as an exchange 
		medium for tests. 
		
		Unfortunately, this seems to be hard to get working right.
		
		Leaving out for now.

	<element name="defineSchema" type="tns:defineSchemaType" />
	<complexType name="defineSchemaType">
			<choice>
				<element ref="sub:schema" />
				<element ref="xsd:schema" />
			</choice>
		<attribute name="name" type="xs:NCName" use="required" />
	</complexType>
	-->


	<element name="parserTestCase" type="tns:parserTestCaseType" />
	<complexType name="parserTestCaseType">
		<sequence>
			<element ref="tns:document" />
			<element ref="tns:infoset" />
		</sequence>
		<attribute name="name" type="xs:NCName" use="required" />
		<attribute name="root" type="xs:NCName" use="required" />
		<attribute name="model" type="xs:string" use="optional" /> <!-- is there a type for a path/uri? -->
		<attribute name="description" type="xs:string" use="optional" />
		<attribute name="unsupported" type="xs:boolean" use="optional" />
		<attribute name="validation" type="tns:onOff" use="optional" default="off"/>
	</complexType>
	
	<simpleType name="onOff">
	   <restriction base="xs:token">
	   	<enumeration value="on"/>
	   	<enumeration value="off"/>
	   </restriction>
	</simpleType>

	<element name="document" type="tns:documentType" />
	<element name="infoset" type="tns:infosetType" />

	<complexType name="documentType" mixed="true">
		<sequence>
			<element ref="tns:documentPart" minOccurs="0" maxOccurs="unbounded" />
		</sequence>
	</complexType>

	<element name="documentPart" type="tns:documentPartType" />
	<complexType name="documentPartType">
		<simpleContent>
			<extension base="xs:string">
				<attribute name="type" type="tns:documentPartTypeEnum"
					use="required" />
			</extension>
		</simpleContent>
	</complexType>

	<simpleType name="documentPartTypeEnum">
		<restriction base="xs:string">
			<enumeration value="byte" />
			<enumeration value="text" />
		</restriction>
	</simpleType>

	<complexType name="infosetType">
		<sequence>
			<element ref="tns:dfdlInfoset" />
		</sequence>
	</complexType>

	<element name="dfdlInfoset" type="tns:dfdlInfosetType" />

	<complexType name="dfdlInfosetType" mixed="true">
		<sequence>
			<any namespace="##any" processContents="lax" minOccurs="0"
				maxOccurs="unbounded" />
		</sequence>
	</complexType>

</xsd:schema>